{"version":3,"sources":["components/UserMenu/userMenu.module.css","redux/auth/auth-operations.js","redux/auth/auth-actions.js","redux/contacts/actions/userActions.js","redux/auth/auth-selectors.js","components/UserMenu/Navigation.js","components/UserMenu/UserMenu.js","components/UserMenu/AuthNav.js","components/UserMenu/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","redux/contacts/reducers/filterReducer.js","redux/contacts/reducers/contactsReducer.js","redux/auth/auth-reducers.js","redux/store.js","index.js"],"names":["module","exports","axios","defaults","baseURL","token","set","headers","common","Authorization","unset","register","credentials","dispatch","a","registerRequest","post","data","registerSuccess","registerError","message","login","loginRequest","loginSuccess","loginError","logout","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","filterContacts","editContactsRequest","editContactsSuccess","editContactsError","isAuthenticated","store","isAuth","getUsername","user","name","Navigation","useSelector","to","exact","className","s","link","activeClassName","activeLink","fontSize","UserMenu","onLogout","useDispatch","operations","container","color","type","onClick","exitButton","AuthNav","AppBar","header","PrivateRoute","Component","component","redirectTo","routeProps","render","props","PublicRoute","restricted","Homepage","lazy","Login","Register","App","useEffect","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","filterReducer","createReducer","_","payload","contactsReducer","state","filter","el","id","map","loader","initialUserState","email","setError","error","combineReducers","authPersistConfig","key","storage","whitelist","contactsReducers","items","reducers","rootReducer","contacts","persistReducer","authReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.038d8a59.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"userMenu_container__1vXtY\",\"name\":\"userMenu_name__KryIi\",\"link\":\"userMenu_link__3DRWY\",\"activeLink\":\"userMenu_activeLink__22q2e\",\"exitButton\":\"userMenu_exitButton__27mQR\"};","import axios from \"axios\";\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginSuccess,\r\n  loginRequest,\r\n  loginError,\r\n  logoutSuccess,\r\n  logoutRequest,\r\n  logoutError,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserRequest,\r\n  getCurrentUserError,\r\n} from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const { data } = await axios.post(\"/users/signup\", credentials);\r\n    token.set(data.token);\r\n    dispatch(registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst login = (credentials) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const { data } = await axios.post(\"/users/login\", credentials);\r\n    dispatch(loginSuccess(data));\r\n    token.set(data.token);\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logout = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const { data } = await axios.get(\"/users/current\");\r\n\r\n    dispatch(getCurrentUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default {\r\n  token,\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","import {createAction} from '@reduxjs/toolkit'\r\n\r\nexport const registerRequest=createAction('auth/registerRequest')\r\nexport const registerSuccess=createAction('auth/registerSuccess')\r\nexport const registerError=createAction('auth/registerError')\r\n\r\nexport const loginSuccess=createAction('auth/loginSuccess')\r\nexport const loginRequest=createAction('auth/loginRequest')\r\nexport const loginError=createAction('auth/loginError')\r\n\r\nexport const logoutSuccess=createAction('auth/logoutSuccess')\r\nexport const logoutRequest=createAction('auth/logoutRequest')\r\nexport const logoutError=createAction('auth/logoutError')\r\n\r\nexport const getCurrentUserSuccess=createAction('auth/getCurrentUserSuccess')\r\nexport const getCurrentUserRequest=createAction('auth/getCurrentUserRequest')\r\nexport const getCurrentUserError=createAction('auth/getCurrentUserError')","// import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\n// ===========Redux===============\r\n// const addContact=(contactObj)=>{\r\n//     return{\r\n//         type:add,\r\n//         payload:{\r\n//             id:  uuidv4(),\r\n//             name:contactObj.name,\r\n//             number:contactObj.number,\r\n//         }\r\n//     }\r\n// }\r\n\r\n// const deleteContact=(id)=>{\r\n//     return{\r\n//         type:deleteUsers,\r\n//         payload:id\r\n//     }\r\n// }\r\n\r\n// const filterContacts=(value)=>{\r\n//     return{\r\n//         type:filter,\r\n//         payload:value,\r\n//     }\r\n\r\n// }\r\n// ===========Redux Toolkit===============\r\n//  const addContact = createAction(\"ADD_CONTACT\", ({ id, name, number }) => {\r\n//   return {\r\n//     payload: {\r\n//       id: uuidv4(),\r\n//       name: name,\r\n//       number: number,\r\n//     },\r\n//   };\r\n// });\r\n\r\n// const deleteContact = createAction(\"DELETE_CONTACT\");\r\n// const filterContacts = createAction(\"FILTER_CONTACTS\");\r\n\r\n// export default { addContact, deleteContact, filterContacts };\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\r\n\r\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\r\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\r\nexport const addContactsError = createAction(\"contacts/addContactsError\");\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  \"contacts/deleteContactsRequest\"\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  \"contacts/deleteContactsSuccess\"\r\n);\r\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\r\n\r\nexport const filterContacts = createAction(\"contacts/filter\");\r\n\r\n\r\nexport const editContactsRequest = createAction(\"contacts/editContactsRequest\");\r\nexport const editContactsSuccess = createAction(\"contacts/editContactsSuccess\");\r\nexport const editContactsError = createAction(\"contacts/editContactsError\");\r\n","export const isAuthenticated=store=>store.auth.isAuth\r\nexport const getUsername=store=>store.auth.user.name\r\n\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isAuthenticated } from \"../../redux/auth/auth-selectors\";\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport s from \"./userMenu.module.css\";\r\n\r\n\r\nconst Navigation = () => {\r\n  \r\n  const isAuth=useSelector(isAuthenticated)\r\n  \r\n  \r\n return (\r\n  <nav>\r\n    {isAuth && (\r\n      <NavLink to=\"/\" exact className={s.link} activeClassName={s.activeLink}>\r\n        <HomeIcon fontSize=\"large\" />\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n)};\r\n\r\n\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport operations from '../../redux/auth/auth-operations'\r\nimport {getUsername} from '../../redux/auth/auth-selectors'\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport s from './userMenu.module.css'\r\n\r\n\r\n\r\n\r\nconst UserMenu = () => {\r\n  const dispatch = useDispatch();\r\n  const onLogout = dispatch(operations.logout)\r\n  const name = useSelector(getUsername)\r\n  \r\n  \r\n  return(\r\n  <div className={s.container}>\r\n    \r\n    <AccountBoxIcon color=\"primary\" fontSize=\"large\"/>\r\n    <span className={s.name}>Welcome, {name}</span>\r\n    <button type=\"button\" onClick={onLogout} className={s.exitButton}>\r\n    <ExitToAppIcon color=\"primary\" fontSize=\"large\"/>\r\n    </button>\r\n  </div>\r\n)};\r\n\r\n\r\nexport default UserMenu;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./userMenu.module.css\";\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink to=\"/register\" exact className={s.link} activeClassName={s.activeLink}>\r\n      Registration\r\n    </NavLink>\r\n    <NavLink to=\"/login\" exact className={s.link} activeClassName={s.activeLink}>\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport { isAuthenticated } from \"../../redux/auth/auth-selectors\";\r\n\r\nimport AuthNav from \"./AuthNav\";\r\nimport s from \"./userMenu.module.css\";\r\n\r\nconst AppBar = () => {\r\n  const isAuth=  useSelector(isAuthenticated)\r\n  \r\n return (\r\n \r\n  <header className={s.header}>\r\n    <Navigation />\r\n\r\n    {isAuth ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n)};\r\n\r\n\r\n\r\nexport default AppBar;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport  {isAuthenticated} from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute =({\r\n  component: Component,\r\n  \r\n  redirectTo,\r\n  ...routeProps\r\n}) =>{\r\n  \r\n const  isAuth=  useSelector(isAuthenticated)\r\n  \r\n  return (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuth ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n)};\r\n\r\n\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport {isAuthenticated} from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute =({component: Component,redirectTo,\r\n  ...routeProps})=>{ \r\n  const isAuth=useSelector(isAuthenticated)\r\n  \r\n  return(\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuth && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n)};\r\n\r\n\r\n\r\nexport default PublicRoute;","import React, { useEffect, lazy, Suspense } from \"react\";\r\nimport {Switch } from 'react-router-dom'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\";\r\nimport operations from './redux/auth/auth-operations'\r\nimport {useDispatch} from 'react-redux'\r\nimport AppBar from './components/UserMenu/AppBar'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport PublicRoute from './components/PublicRoute'\r\n\r\nconst  Homepage= lazy(()=>import('./views/HomePage'))\r\nconst  Login = lazy(()=>import('./views/Login'))\r\nconst  Register = lazy(()=>import('./views/Register'))\r\n\r\n\r\nconst App= () =>{\r\n \r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(operations.getCurrentUser());\r\n  }, []);\r\n  \r\n  \r\n    return (\r\n      <div className=\"App\">\r\n         <AppBar/>\r\n        <Suspense fallback={<p className='fallback'>Загружаем...</p>}>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Homepage} redirectTo=\"/login\"/>\r\n          <PublicRoute restricted path=\"/login\" redirectTo=\"/\" component={Login}/>\r\n          <PublicRoute restricted path=\"/register\" redirectTo=\"/\"  component={Register}/>\r\n        </Switch>\r\n        </Suspense>\r\n      </div>\r\n    );\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {createReducer} from \"@reduxjs/toolkit\"\r\nimport { filterContacts}from \"../actions/userActions\"\r\n\r\n// ===========Redux===============\r\n// const { filter } = types;\r\n\r\n// const filterReducer = (state = \"\", action) => {\r\n//   const { type, payload } = action;\r\n//   switch (type) {\r\n//     case filter:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// }\r\n\r\n\r\n// ===========Redux Toolkit===============\r\n\r\nconst filterReducer=createReducer('',{\r\n  [filterContacts]:((_,{payload})=> payload)\r\n})\r\n\r\nexport default filterReducer","// import types from \"../actions/actionsTypes\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  editContactsRequest,\r\n  editContactsSuccess,\r\n  editContactsError,\r\n} from \"../actions/userActions.js\";\r\n\r\n// ===========Redux===============\r\n// const { add, deleteUsers } = types;\r\n\r\n// const contacts = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n\r\n// const contactsReducer = (state = contacts, action) => {\r\n//   const { type, payload } = action;\r\n//   switch (type) {\r\n//     case add:\r\n//       return [...state, payload];\r\n//     case deleteUsers:\r\n//       return state.filter((el) => el.id !== payload);\r\n//       default:\r\n//         return state\r\n//   }\r\n// };\r\n\r\n// ===========Redux Toolkit===============\r\n// const state = [\r\n//   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n// ];\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactsSuccess]: (state, { payload }) => {\r\n    return state.filter((el) => el.id !== payload);\r\n  },\r\n  [editContactsSuccess]: (state, { payload }) =>\r\n    state.map((el) => (el.id === payload.id ? payload : el)),\r\n});\r\n\r\nconst loader = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n  [deleteContactsRequest]: () => true,\r\n  [editContactsRequest]: () => true,\r\n  [editContactsSuccess]: () => false,\r\n  [editContactsError]: () => false,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n\r\n});\r\n\r\nexport default { contactsReducer, loader };\r\n","import {combineReducers} from 'redux'\r\nimport {createReducer} from '@reduxjs/toolkit'\r\nimport {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    loginSuccess,\r\n    loginRequest,\r\n    loginError,\r\n    logoutSuccess,\r\n    logoutRequest,\r\n    logoutError,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserRequest,\r\n    getCurrentUserError\r\n} from './auth-actions'\r\n\r\n\r\nconst initialUserState={name:null, email:null}\r\n\r\nconst user =createReducer(initialUserState, {\r\n   [registerSuccess]:(_,{payload})=>payload.user, \r\n   [loginSuccess]:(_,{payload})=>payload.user, \r\n   [logoutSuccess]:()=>initialUserState,\r\n   [getCurrentUserSuccess]:(_,{payload})=>payload\r\n\r\n})\r\n\r\nconst token =createReducer(null, {\r\n    [registerSuccess]:(_,{payload})=>payload.token,\r\n    [loginSuccess]:(_,{payload})=>payload.token,\r\n    [logoutSuccess]:()=>null\r\n})\r\n\r\nconst setError=(_, {payload})=>payload\r\nconst error =createReducer(null, {\r\n    [registerError]: setError,\r\n    [loginError]: setError,\r\n    [logoutError]: setError,\r\n    [getCurrentUserError]: setError\r\n})\r\n\r\nconst isAuth=createReducer(false,{\r\n    [getCurrentUserRequest]:()=>true,\r\n    [registerSuccess]:()=>true,\r\n    [loginSuccess]:()=>true,\r\n    [getCurrentUserSuccess]:()=>true,\r\n    [registerError]:()=>false,\r\n    [loginError]:()=>false,\r\n    [getCurrentUserError]:()=>false,\r\n    [logoutSuccess]:()=>false,\r\n})\r\n\r\n\r\n\r\nexport default combineReducers ({\r\n    user,\r\n    token,\r\n    error,\r\n    isAuth,\r\n})","// ===========Redux===============\r\n// import { createStore, combineReducers } from \"redux\";\r\n// import filterReducer from \"./reducers/filterReducer\";\r\n// import contactsReducer from \"./reducers/contactsReducer\";\r\n\r\n// const contactsReducers=combineReducers({\r\n//     items: contactsReducer,\r\n//     filter: filterReducer,\r\n// })\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts:contactsReducers\r\n// });\r\n\r\n// const store = createStore(\r\n//   rootReducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n// );\r\n// ===========Redux Toolkit===============\r\nimport {\r\n  configureStore,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport filterReducer from \"./contacts/reducers/filterReducer\";\r\nimport reducers from \"./contacts/reducers/contactsReducer\";\r\nimport authReducers from './auth/auth-reducers'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst contactsReducers = combineReducers({\r\n  items: reducers.contactsReducer,\r\n  filter: filterReducer,\r\n  loader: reducers.loader,\r\n  error: reducers.error,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducers,\r\n  auth: persistReducer(authPersistConfig,authReducers)\r\n});\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <Provider store={store.store}>\r\n     <PersistGate loading={null} persistor={store.persistor}>\r\n  \r\n<BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </PersistGate>\r\n  </Provider>\r\n \r\n   </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}