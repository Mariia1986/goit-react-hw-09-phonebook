{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Loader/Loader.module.css","redux/contacts/operation.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/Loader/Loader.js","components/ContactList/EditContactForm/EditContactForm.js","components/ContactList/ContactList.js","views/HomePage.js"],"names":["module","exports","dispatch","a","fetchContactsRequest","axios","get","data","fetchContactsSuccess","fetchContactsError","message","contact","addContactsRequest","post","addContactsSuccess","addContactsError","contactId","deleteContactsRequest","delete","deleteContactsSuccess","deleteContactsError","value","editContactsRequest","id","patch","editContactsSuccess","editContactsError","getContacts","state","contacts","items","filterContact","filter","filteredContacts","createSelector","name","toLowerCase","includes","toLocaleLowerCase","getLoading","loader","ContactForm","useDispatch","useSelector","useState","setName","number","setNumber","handleContactInfo","e","currentTarget","console","log","className","s","container","header","form","onSubmit","preventDefault","newContact","some","el","alert","operation","htmlFor","label","placeholder","formInput","onChange","pattern","title","required","type","Button","addButton","variant","Filter","filterTitle","filterConteiner","filterLabel","filterInput","filterContacts","Spinner","color","height","width","timeout","Component","EditContactForm","currName","currNumber","editReset","contaktListButton","ContactList","filteredCont","isLoading","editform","setEditForm","idContact","setIdContact","useEffect","onClickEdit","contaktList","map","contaktListItem","contaktListName","buttonContainer","onClick","onClickDelete","Homepage"],"mappings":"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","file":"static/js/5.d65db559.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contaktList\":\"ContactList_contaktList__1Jw3y\",\"contaktListItem\":\"ContactList_contaktListItem__EH0rL\",\"contaktListButton\":\"ContactList_contaktListButton__3YBKu\",\"contaktListName\":\"ContactList_contaktListName__171nU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__2Ffoh\",\"form\":\"ContactForm_form__WxHvm\",\"formInput\":\"ContactForm_formInput__1eENr\",\"label\":\"ContactForm_label__15WBC\",\"addButton\":\"ContactForm_addButton__3NxSn\",\"header\":\"ContactForm_header__1DPtd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2elgp\",\"filterLabel\":\"Filter_filterLabel__kHOF4\",\"filterTitle\":\"Filter_filterTitle__34MIK\",\"filterConteiner\":\"Filter_filterConteiner__3aJ52\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loader_container__2bsob\",\"loader\":\"Loader_loader__18nqH\"};","import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  editContactsRequest,\r\n  editContactsSuccess,\r\n  editContactsError,\r\n} from \"./actions/userActions.js\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst addContacts = (contact) => async (dispatch) => {\r\n  dispatch(addContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post(\"/contacts\", contact);\r\n    dispatch(addContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst deleteContacts = (contactId) => async (dispatch) => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  try {\r\n    await axios.delete(`/contacts/${contactId}`);\r\n    dispatch(deleteContactsSuccess(contactId));\r\n  } catch (error) {\r\n    dispatch(deleteContactsError(error.message));\r\n  }\r\n};\r\n\r\nconst editContacts = (value) => async (dispatch) => {\r\n  dispatch(editContactsRequest());\r\n  const { id } = value;\r\n  delete value.id;\r\n  try {\r\n    const { data } = await axios.patch(`/contacts/${id}`, value);\r\n    dispatch(editContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(editContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContacts,\r\n  deleteContacts,\r\n  editContacts,\r\n};\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (state) => {\r\n  return state.contacts.items;\r\n};\r\nexport const filterContact = (state) => {\r\n  return state.contacts.filter;\r\n};\r\n\r\nexport const filteredContacts = createSelector(\r\n  [getContacts, filterContact],\r\n  (items, filter) =>\r\n    items.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLocaleLowerCase())\r\n    )\r\n);\r\n\r\nexport const getLoading = (state) => state.contacts.loader;\r\n","import React, { useState } from \"react\";\r\nimport {  useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport operation from \"../../redux/contacts/operation\";\r\nimport { getContacts } from \"../../redux/contacts/selectors\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nconst ContactForm = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleContactInfo = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        return;\r\n      case \"number\":\r\n        setNumber(value);\r\n        return;\r\n      default:\r\n        console.log(\"Something wrong\");\r\n    }\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const newContact = { name, number };\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n\r\n    if (\r\n      contacts.some(\r\n        (el) => el.name.toLowerCase() === newContact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${newContact.name} is already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(operation.addContacts(newContact));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={s.container}>\r\n        <h1 className={s.header}>Phonebook</h1>\r\n\r\n        <form className={s.form} onSubmit={submitForm}>\r\n          <label htmlFor=\"name\" className={s.label}>\r\n            Name\r\n            <input\r\n              placeholder=\"Ivan Ivanov\"\r\n              className={s.formInput}\r\n              onChange={handleContactInfo}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              name=\"name\"\r\n              value={name}\r\n              type=\"text\"\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              placeholder=\"09755555555\"\r\n              required\r\n              onChange={handleContactInfo}\r\n              pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n              title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              htmlFor=\"number\"\r\n              className={s.formInput}\r\n              name=\"number\"\r\n              type=\"tel\"\r\n            />\r\n          </label>\r\n          <Button className={s.addButton} variant=\"primary\" type=\"submit\">\r\n            Add contact\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterContacts } from \"../../redux/contacts/actions/userActions\";\r\nimport { filterContact} from '../../redux/contacts/selectors'\r\n\r\nconst Filter=() =>{\r\n  const filter=useSelector(filterContact);\r\n  const dispatch = useDispatch();\r\n  const handleFilter = (e) => {\r\n    dispatch(filterContacts(e.currentTarget.value));\r\n  };\r\n\r\n  \r\n    return ( \r\n      <>\r\n    <h2 className={s.filterTitle}>Contacts</h2>\r\n      <div className={s.filterConteiner}>\r\n     \r\n      <label className={s.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.filterInput}\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={handleFilter}\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  search: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport s from './Loader.module.css'\r\n\r\n\r\n class Spinner extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n        <div className={s.container}>\r\n      <Loader\r\n        type=\"Puff\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n        className={s.loader}\r\n      />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Spinner","import React, { useState } from \"react\";\r\nimport {useDispatch } from \"react-redux\";\r\nimport operation from \"../../../redux/contacts/operation\";\r\nimport s from \"../ContactList.module.css\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst EditContactForm = ({ id, currName,currNumber, editReset}) => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(currName);\r\n  const [number, setNumber] = useState(currNumber);\r\n  const handleContactInfo = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        return;\r\n      case \"number\":\r\n        setNumber(value);\r\n        return;\r\n      default:\r\n        console.log(\"Something wrong\");\r\n    }\r\n  };\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const newContact = { id, name, number };\r\n    console.log(newContact)\r\n   dispatch(operation.editContacts(newContact, id)) \r\n    editReset(id);\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={submitForm}>\r\n      <label htmlFor=\"name\" className={s.label}>\r\n        Name\r\n        <input\r\n          placeholder=\"Ivan Ivanov\"\r\n          className={s.formInput}\r\n          onChange={handleContactInfo}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          name=\"name\"\r\n          value={name}\r\n          type=\"text\"\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          placeholder=\"09755555555\"\r\n          required\r\n          onChange={handleContactInfo}\r\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          htmlFor=\"number\"\r\n          className={s.formInput}\r\n          name=\"number\"\r\n          type=\"tel\"\r\n        />\r\n      </label>\r\n      <button className={s.contaktListButton} type=\"submit\">\r\n        <EditIcon color=\"primary\" />\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default EditContactForm;\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Spinner from \"../Loader/Loader\";\r\nimport {useDispatch, useSelector } from \"react-redux\";\r\nimport operation from \"../../redux/contacts/operation\";\r\nimport {filteredContacts, getLoading} from \"../../redux/contacts/selectors\";\r\nimport EditContactForm from \"./EditContactForm/EditContactForm\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const filteredCont = useSelector(filteredContacts);\r\n  const isLoading = useSelector(getLoading);\r\n  const [editform, setEditForm] = useState(false);\r\n  const [idContact, setIdContact] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(operation.fetchContacts());\r\n  }, []);\r\n\r\n  const onClickDelete = (id) => {\r\n    dispatch(operation.deleteContacts(id));\r\n  };\r\n\r\n  const onClickEdit = (id) => {\r\n    setEditForm(!editform);\r\n    setIdContact(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Spinner />}\r\n      {\r\n        <ul className={s.contaktList}>\r\n          {filteredCont.map(({ id, name, number }) => (\r\n            <li className={s.contaktListItem} key={id}>\r\n              <div>\r\n                {editform && id === idContact ? (\r\n                  <EditContactForm\r\n                    id={id}\r\n                    currName={name}\r\n                    currNumber={number}\r\n                    editReset={onClickEdit}\r\n                  />\r\n                ) : (\r\n                  <p className={s.contaktListName}>\r\n                    {name} : {number}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div className={s.buttonContainer}>\r\n                <button\r\n                  className={s.contaktListButton}\r\n                  type=\"button\"\r\n                  onClick={() => onClickDelete(id)}\r\n                >\r\n                  <DeleteIcon color=\"primary\" />\r\n                </button>\r\n                <button\r\n                  className={s.contaktListButton}\r\n                  type=\"button\"\r\n                  onClick={() => onClickEdit(id)}\r\n                >\r\n                  {!editform && <EditIcon color=\"primary\"/>}\r\n                </button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      }\r\n    </>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  filteredNames: PropTypes.array,\r\n  deleteItem: PropTypes.func,\r\n};\r\n\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"../components/ContactForm\";\r\nimport Filter from \"../components/Filter\";\r\nimport ContactList from \"../components/ContactList\";\r\n\r\nclass Homepage extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <ContactForm />\r\n        <div>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Homepage;\r\n"],"sourceRoot":""}